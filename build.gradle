buildscript {
    ext {
        kotlinVersion = '1.3.11'
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.zzz'
version = '0.0.2'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RC1"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.aspectj:aspectjweaver"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
    launchScript()
}

clean {
    delete("./out", "./logs")
}

build {
    doLast {
        file("./build/libs/${jar.archiveBaseName.getOrElse()}-${jar.archiveVersion.getOrElse()}.jar")
                .renameTo("./build/libs/${jar.archiveBaseName.getOrElse()}.jar")
        copy {
            from "./springboot.conf"
            into "./build/libs"
            rename {
                "${jar.archiveBaseName.getOrElse()}.conf"
            }
        }
        copy {
            from "./src/main/resources/application.yml"
            into "./build/libs"
        }
        copy {
            from "./restart.sh"
            into "./build/libs"
        }
    }
}
